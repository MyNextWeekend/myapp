# 服务基本信息
server:
  address: ":8000"
  dumpRouterMap: true
  routeOverWrite: true
  accessLogEnabled: true
  openapiPath: "/api.json"
  swaggerPath: "/swagger"

# 数据库配置
database:
  logger:
    level: "all"
    stdout: true
  default:
    link: "mysql:myapp:asdfg12345@tcp(106.55.186.222:3306)/myapp"
    debug: true

# 日志配置
logger:
  path: "./logs/"      # 日志文件路径。默认为空，表示关闭，仅输出到终端
  file: "{Y-m-d}.log" # 日志文件格式。默认为"{Y-m-d}.log"
  level: "all"
  header: true          # 是否打印日志的头信息。默认true
  stdout: true          # 日志是否同时输出到终端。默认true

# gToken 配置
gToken:
  # 缓存模式 1 gCache 2 gRedis
  CacheMode: 2
  # 是否支持多端登录
  MultiLogin: true
  # 超时时间
  Timeout: 2 * 60 * 60 * 1000
  CacheKey: "gfToken:"
  maxRefresh: 1 * 60 * 1000
  TokenDelimiter: "_"
  encryptKey: "koi29a83idakguqjq29asd9asd8a7jhq"
  AuthFailMsg: "登录超时，请重新登录"

# Redis 配置
redis:
  default:
    address: 106.55.186.222:6379
    db: 3
    pass: "remember"
    idleTimeout: "60s" #连接最大空闲时间，使用时间字符串例如30s/1m/1d
    maxConnLifetime: "90s" #连接最长存活时间，使用时间字符串例如30s/1m/1d
    waitTimeout: "60s" #等待连接池连接的超时时间，使用时间字符串例如30s/1m/1d
    dialTimeout: "30s" #TCP连接的超时时间，使用时间字符串例如30s/1m/1d
    readTimeout: "30s" #TCP的Read操作超时时间，使用时间字符串例如30s/1m/1d
    writeTimeout: "30s" #TCP的Write操作超时时间，使用时间字符串例如30s/1m/1d
    maxActive: 100

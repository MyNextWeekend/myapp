// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// CaseDao is the data access object for table case.
type CaseDao struct {
	table   string      // table is the underlying table name of the DAO.
	group   string      // group is the database configuration group name of current DAO.
	columns CaseColumns // columns contains all the column names of Table for convenient usage.
}

// CaseColumns defines and stores column names for table case.
type CaseColumns struct {
	Id            string //
	Name          string // 名称
	Describe      string // 描述
	State         string // 状态
	CreateAt      string // 创建时间
	CreateUser    string // 创建人
	UpdateAt      string // 更新时间
	UpdateUser    string // 更新人
	DatabaseId    string // 数据库信息
	EnvironmentId string // 环境信息
}

// caseColumns holds the columns for table case.
var caseColumns = CaseColumns{
	Id:            "id",
	Name:          "name",
	Describe:      "describe",
	State:         "state",
	CreateAt:      "create_at",
	CreateUser:    "create_user",
	UpdateAt:      "update_at",
	UpdateUser:    "update_user",
	DatabaseId:    "database_id",
	EnvironmentId: "environment_id",
}

// NewCaseDao creates and returns a new DAO object for table data access.
func NewCaseDao() *CaseDao {
	return &CaseDao{
		group:   "default",
		table:   "case",
		columns: caseColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *CaseDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *CaseDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *CaseDao) Columns() CaseColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *CaseDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *CaseDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *CaseDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
